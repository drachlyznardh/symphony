/* 
 * File:   Input.hpp
 * Author: alessio
 *
 */

#ifndef INPUT_HPP
#define	INPUT_HPP
#include <Polycode.h>
#include <PolyCoreInput.h>

namespace tbd {
    /**
     * Singleton class that encapsulates all the input stuff.
     * In the future it should read the mapping from a configuration file.
     */
    class Input : public Polycode::EventHandler{
    public:
        /**
         * Tells the singleton class to answer to the events generated by the core input
         * @param c
         */
        static void changeInput(Polycode::Core* c);
        /**
         * @return the singleton class
         */
        static Input* get();
        /**
         * Up button (from 0.0 to 1.0)
         * @return 
         */
        double Up();
        /**
         * Down button (from 0.0 to 1.0)
         * @return 
         */
        double Down();
        /**
         * Left button (from 0.0 to 1.0)
         * @return 
         */
        double Left();
        /**
         * Right button (from 0.0 to 1.0)
         * @return 
         */
        double Right();
        /**
         * Is first button down?
         * @return 
         */
        bool isButton1();
        /**
         * @return X position of mouse
         */
        double X();
        /**
         * @return Y position of mouse
         */
        double Y();
    private:
        Input();
        double up,down,left,right;
        bool button1;
        double x,y;
        int xres;
        int yres;
        void handleEvent(Polycode::Event *e);
    };
}

#endif	/* INPUT_HPP */

