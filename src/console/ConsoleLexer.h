// Generated by Flexc++ V0.98.00 on Mon, 08 Jul 2013 23:14:45 +0200

#ifndef ConsoleLexer_H_INCLUDED_
#define ConsoleLexer_H_INCLUDED_

// $insert baseclass_h
#include "ConsoleLexerbase.h"

// $insert namespace-open
namespace tbd
{

// $insert classHead
class ConsoleLexer: public ConsoleLexerBase
{
    public:
        explicit ConsoleLexer(std::istream &in = std::cin,
                                std::ostream &out = std::cout);

        ConsoleLexer(std::string const &infile, std::string const &outfile);
        
        // $insert lexFunctionDecl
        int lex();

    private:
        int lex__();
        int executeAction__(size_t ruleNr);

        void print();
        void preCode();     // re-implement this function for code that must 
                            // be exec'ed before the patternmatching starts
};

// $insert scannerConstructors
inline ConsoleLexer::ConsoleLexer(std::istream &in, std::ostream &out)
:
    ConsoleLexerBase(in, out)
{}

inline ConsoleLexer::ConsoleLexer(std::string const &infile, std::string const &outfile)
:
    ConsoleLexerBase(infile, outfile)
{}

// $insert inlineLexFunction
inline int ConsoleLexer::lex()
{
    return lex__();
}

inline void ConsoleLexer::preCode() 
{
    // optionally replace by your own code
}

inline void ConsoleLexer::print() 
{
    print__();
}

// $insert namespace-close
}

#endif // ConsoleLexer_H_INCLUDED_

